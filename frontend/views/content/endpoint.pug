extends ../layout
block content
  //- TODO INTEROP sort features by name
  //- TODO AVAIL update graph data
  //- TODO DISCO update data
  section#post
    article
      header.wrpl.w-3-4
        h1
          a(href!=`/endpoint?uri=${encodeURIComponent(epUri)}`) #{epUri}
          a(href=epUri, target="_blank", rel="noopener noreferrer", style="display: inline-block; margin-left: 10px; margin-bottom: -5px; ") 
            | <svg width="36" height="36" viewBox="0 0 25 25" fill="#343C54" xmlns="http://www.w3.org/2000/svg">
            |   <path fill-rule="evenodd" clip-rule="evenodd" d="M18.1022 14.0998C17.2236 14.9785 15.7989 14.9785 14.9203 14.0998L13.5581 12.7377L12.4971 13.7987L13.8593 15.1608C14.738 16.0395 14.7379 17.4641 13.8593 18.3428L10.1198 22.0822C9.24115 22.9609 7.81652 22.9609 6.93785 22.0822L3.1551 18.2995C2.27642 17.4208 2.27642 15.9962 3.1551 15.1175L6.89455 11.378C7.77323 10.4994 9.19785 10.4994 10.0765 11.378L11.4365 12.738L12.4975 11.677L11.1376 10.3171C10.2589 9.4384 10.2589 8.01378 11.1376 7.1351L14.8812 3.39143C15.7599 2.51275 17.1845 2.51275 18.0632 3.39143L21.8459 7.17415C22.7246 8.05283 22.7246 9.47745 21.8459 10.3561L18.1022 14.0998ZM10.3758 13.7987L9.01587 12.4387C8.72297 12.1458 8.2481 12.1458 7.95521 12.4387L4.21576 16.1782C3.92287 16.471 3.92287 16.9459 4.21576 17.2388L7.99851 21.0216C8.2914 21.3144 8.76627 21.3144 9.05917 21.0216L12.7986 17.2821C13.0915 16.9892 13.0915 16.5143 12.7986 16.2215L11.4365 14.8593L10.205 16.0907C9.91215 16.3836 9.43728 16.3836 9.14439 16.0907C8.85149 15.7979 8.85149 15.323 9.14439 15.0301L10.3758 13.7987ZM15.9809 13.0391L14.6188 11.677L15.8619 10.4339C16.1548 10.141 16.1548 9.66612 15.8619 9.37323C15.569 9.08034 15.0941 9.08034 14.8012 9.37323L13.5581 10.6163L12.1982 9.25642C11.9053 8.96352 11.9053 8.48865 12.1982 8.19576L15.9419 4.45209C16.2348 4.1592 16.7096 4.1592 17.0025 4.45209L20.7853 8.23481C21.0781 8.5277 21.0781 9.00257 20.7853 9.29547L17.0416 13.0391C16.7487 13.332 16.2738 13.332 15.9809 13.0391Z" fill="#343C54"/>
            | </svg>
        time 
          if epDetails.datasets.length>1
            | Datasets: 
            ul
            each dataset, i in epDetails.datasets
              li
                a(href=epDetails.datasets[i].uri, target="_blank") #{epDetails.datasets[i].label}
          else
            if epDetails.datasets && epDetails.datasets[0]
              | Dataset:
              if epDetails.datasets[0].uri  
                a(href=epDetails.datasets[0].uri, target="_blank") #{epDetails.datasets[0].label}
              else
                em #{epDetails.datasets[0].label}
  .line
  section#posts.default-area
      article.wrpl(style='min-width: 400px; width:100%;')
        div(style="height:400px;", class='wrplInnerBox')
          a(title='', href='/availability')
            h2(style="float:left;") Availability
            span(style="float:right;") Last Day (
              b #{parseFloat((epAvail.uptimeLast24h*100).toFixed(2))+ '%'}
              span ); last Week (
              b #{parseFloat((epAvail.uptimeLast7d*100).toFixed(2))+ '%'}
              span ); last Month (
              b #{parseFloat((epAvail.uptimeLast31d*100).toFixed(2))+ '%'}
              span ); overall (
              b #{parseFloat((epAvail.uptimeOverall*100).toFixed(2))+ '%'}
              span )
          svg#chartAvail(style='height: 370px; padding-right:10px;')
      article.wrpl(style='min-width: 400px; width:100%;')
        - function numberWithCommas(x){return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");}
        div(style="height:400px;", class="wrplInnerBox")
          a(title='', href='/performance')
            h2(style="float:left;") Performance
            if epPerf.threshold>0  && epPerf.threshold%100==0
              span(style='float:right;', onmouseover=`tooltip.show('${configPerf["Result-size thresholds"]}')`, onmouseout='tooltip.hide();') Suspected Result size threshold: 
                b #{numberWithCommas(epPerf.threshold)}
          table(style='width:100%')
            tr
              td
                svg#chartPerformanceAsk(style='float:left; height: 370px;')
              td
                svg#chartPerformanceJoin(style='float:left; height: 370px;')
      article.wrpl(style='min-width: 400px; width:100%;')
        div(class="wrplInnerBoxNoHeight")
          a(title='', href='/interoperability')
            h2(style="float:left;") Interoperability
          table#table_current.psp-table(cellspacing='0', cellpadding='0', border='0', width='100%')
            tr
              td(valign='top', style='width:50%; padding: 0em 2em;')
                table#table_current(cellspacing='0', cellpadding='0', border='0', width='100%')
                  thead
                    tr
                      th.tablehead(colspan=2) 
                        span(onmouseover=`tooltip.show('${configInterop["SPARQL 1.0"]}')`, onmouseout='tooltip.hide();') SPARQL 1.0 features
                  tbody
                    each feature, i in epInterop.SPARQL1Features
                      tr(class=(i % 2 == 0) ? 'odd' : 'even')
                        td
                          span(onmouseover=`tooltip.show('${configInterop[feature.label]}')`, onmouseout='tooltip.hide();') #{feature.label}
                        td.tdcenter
                          if feature.value
                            img(src='/images/green.png')
                          else
                            img(src='/images/red.png', onmouseover=`tooltip.show('${JSON.stringify(feature.exception.string)}')`, onmouseout='tooltip.hide();')
              td(valign='top', style='width:50%; padding: 0em 2em')
                table#table_current.psp-table(cellspacing='0', cellpadding='0', border='0', width='100%')
                  thead
                    tr
                      th.tablehead(colspan=2)
                        span(onmouseover=`tooltip.show('${configInterop["SPARQL 1.1"]}')`, onmouseout='tooltip.hide();') SPARQL 1.1 features
                  tbody
                    each feature, i in epInterop.SPARQL11Features
                      tr(class=(i % 2 == 0) ? 'odd' : 'even')
                        td
                          span(onmouseover=`tooltip.show('${configInterop[feature.label]}')`, onmouseout='tooltip.hide();') #{feature.label}
                        td.tdcenter
                          if feature.value
                            img(src='/images/green.png')
                          else
                            img(src='/images/red.png', onmouseover=`tooltip.show('${JSON.stringify(feature.exception.string)}')`, onmouseout='tooltip.hide();')
      article.wrpl(style='min-width: 400px; width:100%;')
        div.wrplInnerBoxNoHeight
          a(title='', href='/discoverability')
            h2 Discoverability
          div 
            table#table_current.psp-table(cellspacing='0', cellpadding='0', border='0', width='100%')
              tr
                td(valign='top', style='width:33%;; padding: 0em 2em;')
                  table#table_current(cellspacing='0', cellpadding='0', border='0', style='margin-left:1em;')
                    thead
                      tr
                        th.tablehead 
                          span(onmouseover=`tooltip.show('${configDisco["Server Name"]}')`, onmouseout='tooltip.hide();') Server Name
                    tbody
                      tr
                        td
                          span
                            //- TODO: simplify
                            | 
                            b #{epDisco.serverName}
                            |  server name has been detected in the HTTP Get response header
                td(valign='top', style='width:33%;; padding: 0em 2em;')
                  table#table_current(cellspacing='0', cellpadding='0', border='0', style='margin-left:1em;')
                    thead
                      tr
                        th.tablehead 
                          span(onmouseover=`tooltip.show('${configDisco["VoID Description"]}')`, onmouseout='tooltip.hide();') VoID Description
                        th.tablehead 
                    tbody
                      each feature, i in epDisco.VoIDDescription
                        tr(class=(i % 2 == 0) ? 'odd' : 'even')
                          td
                            span(onmouseover=`tooltip.show('${configDisco[feature.label]}')`, onmouseout='tooltip.hide();') #{feature.label}
                          td.tdcenter
                            if feature.value
                              img(src='/images/green.png')
                            else
                              img(src='/images/red.png')
                td(valign='top', style='width:33%; padding: 0em 2em;')
                  table#table_current(cellspacing='0', cellpadding='0', border='0', style='margin-left:1em;')
                    thead
                      tr
                        th.tablehead 
                          span(onmouseover=`tooltip.show('${configDisco["Service Description"]}')`, onmouseout='tooltip.hide();') Service Description
                        th.tablehead 
                    tbody
                      each feature, i in epDisco.SDDescription
                        tr(class=(i % 2 == 0) ? 'odd' : 'even')
                          td 
                            span(onmouseover=`tooltip.show('${configDisco[feature.label]}')`, onmouseout='tooltip.hide();') #{feature.label}
                          td.tdcenter
                            if feature.value
                              img(src='/images/green.png')
                            else
                              img(src='/images/red.png')
  script.
    var colors = d3.scale.category20();
    keyColor = function(d, i) {return colors(d.key)};
    nv.addGraph(function() {
      var chart = nv.models.stackedAreaChart()
        .x(function(d) { return d.x })
        .y(function(d) { return d.y })
        .color(keyColor)
        .showControls(false)
        .showLegend(false)
        .yDomain([0,1]);
      chart.xAxis.tickFormat(function(d) { return d3.time.format('%Y-%m-%d')(new Date(d + ((new Date().getTimezoneOffset()+60) * 60000))) });
      chart.yAxis.tickFormat(d3.format('.2%'));
      d3.select('#chartAvail')
        .datum(!{'[{"key":"Availability","values":'+JSON.stringify(epAvail.data.values.sort(function(a,b){return parseFloat(a.x)-parseFloat(b.x)}))+'}]'})
        .call(chart);
      nv.utils.windowResize(chart.update);
      chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });
      return chart;
    });
    var confPerf = !{JSON.stringify(configPerf)}
    nv.addGraph(function() {
      var chart = nv.models.multiBarHorizontalChart()
          .x(function(d) { return d.label })
          .y(function(d) { return d.value })
          .margin({top: 30, right: 20, bottom: 50, left: 30})
          .showValues(true)
          .showControls(false)
          .barColor(d3.scale.category20().range());
      chart.yAxis
          .tickFormat(d3.format(',.2f'));
      d3.select('#chartPerformanceAsk')
          .datum(!{JSON.stringify(epPerf.ask)})
          .transition().duration(500)
          .call(chart);
      d3.select('#chartPerformanceAsk')
        .selectAll('.tick.major text')
        .on('mouseover',function(d){tooltip.show(confPerf['ASK'+d]);})
        .on('mouseout',function(d){tooltip.hide();});
      nv.utils.windowResize(chart.update);
      chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });
      return chart;
    });
    nv.addGraph(function() {
      var chart = nv.models.multiBarHorizontalChart()
          .x(function(d) { return d.label })
          .y(function(d) { return d.value })
          .margin({top: 30, right: 20, bottom: 50, left: 30})
          .showValues(true)
          .barColor(d3.scale.category20().range())
          .showControls(false);
      chart.xAxis.axisLabel('s');
      chart.yAxis
          .tickFormat(d3.format(',.2f'));
      d3.select('#chartPerformanceJoin')
          .datum(!{JSON.stringify(epPerf.join)})
          .transition().duration(500)
          .call(chart);
      d3.select('#chartPerformanceJoin')
        .selectAll('.tick.major text')
        .on('mouseover',function(d){tooltip.show(confPerf['JOIN'+d]);})
        .on('mouseout',function(d){tooltip.hide();});
      nv.utils.windowResize(chart.update);
      chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });
      return chart;
    });
