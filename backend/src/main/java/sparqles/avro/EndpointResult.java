/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package sparqles.avro;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class EndpointResult extends org.apache.avro.specific.SpecificRecordBase
        implements org.apache.avro.specific.SpecificRecord {
    private static final long serialVersionUID = -787273293297893760L;

    public static final org.apache.avro.Schema SCHEMA$ =
            new org.apache.avro.Schema.Parser()
                    .parse(
                            "{\"type\":\"record\",\"name\":\"EndpointResult\",\"namespace\":\"sparqles.avro\",\"fields\":[{\"name\":\"endpoint\",\"type\":{\"type\":\"record\",\"name\":\"Endpoint\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"datasets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Dataset\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"}]}}}]}},{\"name\":\"start\",\"type\":\"long\"},{\"name\":\"end\",\"type\":\"long\"}],\"import\":\"Endpoint.avsc\"}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    private static final SpecificData MODEL$ = new SpecificData();

    private static final BinaryMessageEncoder<EndpointResult> ENCODER =
            new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

    private static final BinaryMessageDecoder<EndpointResult> DECODER =
            new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

    /**
     * Return the BinaryMessageEncoder instance used by this class.
     *
     * @return the message encoder used by this class
     */
    public static BinaryMessageEncoder<EndpointResult> getEncoder() {
        return ENCODER;
    }

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     *
     * @return the message decoder used by this class
     */
    public static BinaryMessageDecoder<EndpointResult> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link
     * SchemaStore}.
     *
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
     */
    public static BinaryMessageDecoder<EndpointResult> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
    }

    /**
     * Serializes this EndpointResult to a ByteBuffer.
     *
     * @return a buffer holding the serialized data for this instance
     * @throws java.io.IOException if this instance could not be serialized
     */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    /**
     * Deserializes a EndpointResult from a ByteBuffer.
     *
     * @param b a byte buffer holding serialized data for an instance of this class
     * @return a EndpointResult instance decoded from the given buffer
     * @throws java.io.IOException if the given bytes could not be deserialized into an instance of
     *     this class
     */
    public static EndpointResult fromByteBuffer(java.nio.ByteBuffer b) throws java.io.IOException {
        return DECODER.decode(b);
    }

    private sparqles.avro.Endpoint endpoint;
    private long start;
    private long end;

    /**
     * Default constructor. Note that this does not initialize fields to their default values from
     * the schema. If that is desired then one should use <code>newBuilder()</code>.
     */
    public EndpointResult() {}

    /**
     * All-args constructor.
     *
     * @param endpoint The new value for endpoint
     * @param start The new value for start
     * @param end The new value for end
     */
    public EndpointResult(
            sparqles.avro.Endpoint endpoint, java.lang.Long start, java.lang.Long end) {
        this.endpoint = endpoint;
        this.start = start;
        this.end = end;
    }

    @Override
    public org.apache.avro.specific.SpecificData getSpecificData() {
        return MODEL$;
    }

    @Override
    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    @Override
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return endpoint;
            case 1:
                return start;
            case 2:
                return end;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    // Used by DatumReader.  Applications should not call.
    @Override
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                endpoint = (sparqles.avro.Endpoint) value$;
                break;
            case 1:
                start = (java.lang.Long) value$;
                break;
            case 2:
                end = (java.lang.Long) value$;
                break;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    /**
     * Gets the value of the 'endpoint' field.
     *
     * @return The value of the 'endpoint' field.
     */
    public sparqles.avro.Endpoint getEndpoint() {
        return endpoint;
    }

    /**
     * Sets the value of the 'endpoint' field.
     *
     * @param value the value to set.
     */
    public void setEndpoint(sparqles.avro.Endpoint value) {
        this.endpoint = value;
    }

    /**
     * Gets the value of the 'start' field.
     *
     * @return The value of the 'start' field.
     */
    public long getStart() {
        return start;
    }

    /**
     * Sets the value of the 'start' field.
     *
     * @param value the value to set.
     */
    public void setStart(long value) {
        this.start = value;
    }

    /**
     * Gets the value of the 'end' field.
     *
     * @return The value of the 'end' field.
     */
    public long getEnd() {
        return end;
    }

    /**
     * Sets the value of the 'end' field.
     *
     * @param value the value to set.
     */
    public void setEnd(long value) {
        this.end = value;
    }

    /**
     * Creates a new EndpointResult RecordBuilder.
     *
     * @return A new EndpointResult RecordBuilder
     */
    public static sparqles.avro.EndpointResult.Builder newBuilder() {
        return new sparqles.avro.EndpointResult.Builder();
    }

    /**
     * Creates a new EndpointResult RecordBuilder by copying an existing Builder.
     *
     * @param other The existing builder to copy.
     * @return A new EndpointResult RecordBuilder
     */
    public static sparqles.avro.EndpointResult.Builder newBuilder(
            sparqles.avro.EndpointResult.Builder other) {
        if (other == null) {
            return new sparqles.avro.EndpointResult.Builder();
        } else {
            return new sparqles.avro.EndpointResult.Builder(other);
        }
    }

    /**
     * Creates a new EndpointResult RecordBuilder by copying an existing EndpointResult instance.
     *
     * @param other The existing instance to copy.
     * @return A new EndpointResult RecordBuilder
     */
    public static sparqles.avro.EndpointResult.Builder newBuilder(
            sparqles.avro.EndpointResult other) {
        if (other == null) {
            return new sparqles.avro.EndpointResult.Builder();
        } else {
            return new sparqles.avro.EndpointResult.Builder(other);
        }
    }

    /** RecordBuilder for EndpointResult instances. */
    @org.apache.avro.specific.AvroGenerated
    public static class Builder
            extends org.apache.avro.specific.SpecificRecordBuilderBase<EndpointResult>
            implements org.apache.avro.data.RecordBuilder<EndpointResult> {

        private sparqles.avro.Endpoint endpoint;
        private sparqles.avro.Endpoint.Builder endpointBuilder;
        private long start;
        private long end;

        /** Creates a new Builder */
        private Builder() {
            super(SCHEMA$, MODEL$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         *
         * @param other The existing Builder to copy.
         */
        private Builder(sparqles.avro.EndpointResult.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.endpoint)) {
                this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
            if (other.hasEndpointBuilder()) {
                this.endpointBuilder =
                        sparqles.avro.Endpoint.newBuilder(other.getEndpointBuilder());
            }
            if (isValidValue(fields()[1], other.start)) {
                this.start = data().deepCopy(fields()[1].schema(), other.start);
                fieldSetFlags()[1] = other.fieldSetFlags()[1];
            }
            if (isValidValue(fields()[2], other.end)) {
                this.end = data().deepCopy(fields()[2].schema(), other.end);
                fieldSetFlags()[2] = other.fieldSetFlags()[2];
            }
        }

        /**
         * Creates a Builder by copying an existing EndpointResult instance
         *
         * @param other The existing instance to copy.
         */
        private Builder(sparqles.avro.EndpointResult other) {
            super(SCHEMA$, MODEL$);
            if (isValidValue(fields()[0], other.endpoint)) {
                this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
                fieldSetFlags()[0] = true;
            }
            this.endpointBuilder = null;
            if (isValidValue(fields()[1], other.start)) {
                this.start = data().deepCopy(fields()[1].schema(), other.start);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.end)) {
                this.end = data().deepCopy(fields()[2].schema(), other.end);
                fieldSetFlags()[2] = true;
            }
        }

        /**
         * Gets the value of the 'endpoint' field.
         *
         * @return The value.
         */
        public sparqles.avro.Endpoint getEndpoint() {
            return endpoint;
        }

        /**
         * Sets the value of the 'endpoint' field.
         *
         * @param value The value of 'endpoint'.
         * @return This builder.
         */
        public sparqles.avro.EndpointResult.Builder setEndpoint(sparqles.avro.Endpoint value) {
            validate(fields()[0], value);
            this.endpointBuilder = null;
            this.endpoint = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'endpoint' field has been set.
         *
         * @return True if the 'endpoint' field has been set, false otherwise.
         */
        public boolean hasEndpoint() {
            return fieldSetFlags()[0];
        }

        /**
         * Gets the Builder instance for the 'endpoint' field and creates one if it doesn't exist
         * yet.
         *
         * @return This builder.
         */
        public sparqles.avro.Endpoint.Builder getEndpointBuilder() {
            if (endpointBuilder == null) {
                if (hasEndpoint()) {
                    setEndpointBuilder(sparqles.avro.Endpoint.newBuilder(endpoint));
                } else {
                    setEndpointBuilder(sparqles.avro.Endpoint.newBuilder());
                }
            }
            return endpointBuilder;
        }

        /**
         * Sets the Builder instance for the 'endpoint' field
         *
         * @param value The builder instance that must be set.
         * @return This builder.
         */
        public sparqles.avro.EndpointResult.Builder setEndpointBuilder(
                sparqles.avro.Endpoint.Builder value) {
            clearEndpoint();
            endpointBuilder = value;
            return this;
        }

        /**
         * Checks whether the 'endpoint' field has an active Builder instance
         *
         * @return True if the 'endpoint' field has an active Builder instance
         */
        public boolean hasEndpointBuilder() {
            return endpointBuilder != null;
        }

        /**
         * Clears the value of the 'endpoint' field.
         *
         * @return This builder.
         */
        public sparqles.avro.EndpointResult.Builder clearEndpoint() {
            endpoint = null;
            endpointBuilder = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'start' field.
         *
         * @return The value.
         */
        public long getStart() {
            return start;
        }

        /**
         * Sets the value of the 'start' field.
         *
         * @param value The value of 'start'.
         * @return This builder.
         */
        public sparqles.avro.EndpointResult.Builder setStart(long value) {
            validate(fields()[1], value);
            this.start = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'start' field has been set.
         *
         * @return True if the 'start' field has been set, false otherwise.
         */
        public boolean hasStart() {
            return fieldSetFlags()[1];
        }

        /**
         * Clears the value of the 'start' field.
         *
         * @return This builder.
         */
        public sparqles.avro.EndpointResult.Builder clearStart() {
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'end' field.
         *
         * @return The value.
         */
        public long getEnd() {
            return end;
        }

        /**
         * Sets the value of the 'end' field.
         *
         * @param value The value of 'end'.
         * @return This builder.
         */
        public sparqles.avro.EndpointResult.Builder setEnd(long value) {
            validate(fields()[2], value);
            this.end = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'end' field has been set.
         *
         * @return True if the 'end' field has been set, false otherwise.
         */
        public boolean hasEnd() {
            return fieldSetFlags()[2];
        }

        /**
         * Clears the value of the 'end' field.
         *
         * @return This builder.
         */
        public sparqles.avro.EndpointResult.Builder clearEnd() {
            fieldSetFlags()[2] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public EndpointResult build() {
            try {
                EndpointResult record = new EndpointResult();
                if (endpointBuilder != null) {
                    try {
                        record.endpoint = this.endpointBuilder.build();
                    } catch (org.apache.avro.AvroMissingFieldException e) {
                        e.addParentField(record.getSchema().getField("endpoint"));
                        throw e;
                    }
                } else {
                    record.endpoint =
                            fieldSetFlags()[0]
                                    ? this.endpoint
                                    : (sparqles.avro.Endpoint) defaultValue(fields()[0]);
                }
                record.start =
                        fieldSetFlags()[1]
                                ? this.start
                                : (java.lang.Long) defaultValue(fields()[1]);
                record.end =
                        fieldSetFlags()[2] ? this.end : (java.lang.Long) defaultValue(fields()[2]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (java.lang.Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<EndpointResult> WRITER$ =
            (org.apache.avro.io.DatumWriter<EndpointResult>) MODEL$.createDatumWriter(SCHEMA$);

    @Override
    public void writeExternal(java.io.ObjectOutput out) throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<EndpointResult> READER$ =
            (org.apache.avro.io.DatumReader<EndpointResult>) MODEL$.createDatumReader(SCHEMA$);

    @Override
    public void readExternal(java.io.ObjectInput in) throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

    @Override
    protected boolean hasCustomCoders() {
        return true;
    }

    @Override
    public void customEncode(org.apache.avro.io.Encoder out) throws java.io.IOException {
        this.endpoint.customEncode(out);

        out.writeLong(this.start);

        out.writeLong(this.end);
    }

    @Override
    public void customDecode(org.apache.avro.io.ResolvingDecoder in) throws java.io.IOException {
        org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
        if (fieldOrder == null) {
            if (this.endpoint == null) {
                this.endpoint = new sparqles.avro.Endpoint();
            }
            this.endpoint.customDecode(in);

            this.start = in.readLong();

            this.end = in.readLong();

        } else {
            for (int i = 0; i < 3; i++) {
                switch (fieldOrder[i].pos()) {
                    case 0:
                        if (this.endpoint == null) {
                            this.endpoint = new sparqles.avro.Endpoint();
                        }
                        this.endpoint.customDecode(in);
                        break;

                    case 1:
                        this.start = in.readLong();
                        break;

                    case 2:
                        this.end = in.readLong();
                        break;

                    default:
                        throw new java.io.IOException("Corrupt ResolvingDecoder.");
                }
            }
        }
    }
}
