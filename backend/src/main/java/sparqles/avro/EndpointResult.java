/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package sparqles.avro;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EndpointResult extends org.apache.avro.specific.SpecificRecordBase
        implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ =
            new org.apache.avro.Schema.Parser()
                    .parse(
                            "{\"type\":\"record\",\"name\":\"EndpointResult\",\"namespace\":\"sparqles.avro\",\"fields\":[{\"name\":\"endpoint\",\"type\":{\"type\":\"record\",\"name\":\"Endpoint\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"datasets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Dataset\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"}]}}}]}},{\"name\":\"start\",\"type\":\"long\"},{\"name\":\"end\",\"type\":\"long\"}],\"import\":\"Endpoint.avsc\"}");
    @Deprecated public sparqles.avro.Endpoint endpoint;
    @Deprecated public long start;
    @Deprecated public long end;

    /**
     * Default constructor. Note that this does not initialize fields to their default values from
     * the schema. If that is desired then one should use {@link \#newBuilder()}.
     */
    public EndpointResult() {}

    /** All-args constructor. */
    public EndpointResult(
            sparqles.avro.Endpoint endpoint, java.lang.Long start, java.lang.Long end) {
        this.endpoint = endpoint;
        this.start = start;
        this.end = end;
    }

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    /** Creates a new EndpointResult RecordBuilder */
    public static sparqles.avro.EndpointResult.Builder newBuilder() {
        return new sparqles.avro.EndpointResult.Builder();
    }

    /** Creates a new EndpointResult RecordBuilder by copying an existing Builder */
    public static sparqles.avro.EndpointResult.Builder newBuilder(
            sparqles.avro.EndpointResult.Builder other) {
        return new sparqles.avro.EndpointResult.Builder(other);
    }

    /** Creates a new EndpointResult RecordBuilder by copying an existing EndpointResult instance */
    public static sparqles.avro.EndpointResult.Builder newBuilder(
            sparqles.avro.EndpointResult other) {
        return new sparqles.avro.EndpointResult.Builder(other);
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return endpoint;
            case 1:
                return start;
            case 2:
                return end;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                endpoint = (sparqles.avro.Endpoint) value$;
                break;
            case 1:
                start = (java.lang.Long) value$;
                break;
            case 2:
                end = (java.lang.Long) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /** Gets the value of the 'endpoint' field. */
    public sparqles.avro.Endpoint getEndpoint() {
        return endpoint;
    }

    /**
     * Sets the value of the 'endpoint' field.
     *
     * @param value the value to set.
     */
    public void setEndpoint(sparqles.avro.Endpoint value) {
        this.endpoint = value;
    }

    /** Gets the value of the 'start' field. */
    public java.lang.Long getStart() {
        return start;
    }

    /**
     * Sets the value of the 'start' field.
     *
     * @param value the value to set.
     */
    public void setStart(java.lang.Long value) {
        this.start = value;
    }

    /** Gets the value of the 'end' field. */
    public java.lang.Long getEnd() {
        return end;
    }

    /**
     * Sets the value of the 'end' field.
     *
     * @param value the value to set.
     */
    public void setEnd(java.lang.Long value) {
        this.end = value;
    }

    /** RecordBuilder for EndpointResult instances. */
    public static class Builder
            extends org.apache.avro.specific.SpecificRecordBuilderBase<EndpointResult>
            implements org.apache.avro.data.RecordBuilder<EndpointResult> {

        private sparqles.avro.Endpoint endpoint;
        private long start;
        private long end;

        /** Creates a new Builder */
        private Builder() {
            super(sparqles.avro.EndpointResult.SCHEMA$);
        }

        /** Creates a Builder by copying an existing Builder */
        private Builder(sparqles.avro.EndpointResult.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.endpoint)) {
                this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.start)) {
                this.start = data().deepCopy(fields()[1].schema(), other.start);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.end)) {
                this.end = data().deepCopy(fields()[2].schema(), other.end);
                fieldSetFlags()[2] = true;
            }
        }

        /** Creates a Builder by copying an existing EndpointResult instance */
        private Builder(sparqles.avro.EndpointResult other) {
            super(sparqles.avro.EndpointResult.SCHEMA$);
            if (isValidValue(fields()[0], other.endpoint)) {
                this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.start)) {
                this.start = data().deepCopy(fields()[1].schema(), other.start);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.end)) {
                this.end = data().deepCopy(fields()[2].schema(), other.end);
                fieldSetFlags()[2] = true;
            }
        }

        /** Gets the value of the 'endpoint' field */
        public sparqles.avro.Endpoint getEndpoint() {
            return endpoint;
        }

        /** Sets the value of the 'endpoint' field */
        public sparqles.avro.EndpointResult.Builder setEndpoint(sparqles.avro.Endpoint value) {
            validate(fields()[0], value);
            this.endpoint = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /** Checks whether the 'endpoint' field has been set */
        public boolean hasEndpoint() {
            return fieldSetFlags()[0];
        }

        /** Clears the value of the 'endpoint' field */
        public sparqles.avro.EndpointResult.Builder clearEndpoint() {
            endpoint = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /** Gets the value of the 'start' field */
        public java.lang.Long getStart() {
            return start;
        }

        /** Sets the value of the 'start' field */
        public sparqles.avro.EndpointResult.Builder setStart(long value) {
            validate(fields()[1], value);
            this.start = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /** Checks whether the 'start' field has been set */
        public boolean hasStart() {
            return fieldSetFlags()[1];
        }

        /** Clears the value of the 'start' field */
        public sparqles.avro.EndpointResult.Builder clearStart() {
            fieldSetFlags()[1] = false;
            return this;
        }

        /** Gets the value of the 'end' field */
        public java.lang.Long getEnd() {
            return end;
        }

        /** Sets the value of the 'end' field */
        public sparqles.avro.EndpointResult.Builder setEnd(long value) {
            validate(fields()[2], value);
            this.end = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /** Checks whether the 'end' field has been set */
        public boolean hasEnd() {
            return fieldSetFlags()[2];
        }

        /** Clears the value of the 'end' field */
        public sparqles.avro.EndpointResult.Builder clearEnd() {
            fieldSetFlags()[2] = false;
            return this;
        }

        @Override
        public EndpointResult build() {
            try {
                EndpointResult record = new EndpointResult();
                record.endpoint =
                        fieldSetFlags()[0]
                                ? this.endpoint
                                : (sparqles.avro.Endpoint) defaultValue(fields()[0]);
                record.start =
                        fieldSetFlags()[1]
                                ? this.start
                                : (java.lang.Long) defaultValue(fields()[1]);
                record.end =
                        fieldSetFlags()[2] ? this.end : (java.lang.Long) defaultValue(fields()[2]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
