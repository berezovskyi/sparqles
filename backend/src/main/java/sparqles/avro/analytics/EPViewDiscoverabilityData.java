/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package sparqles.avro.analytics;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EPViewDiscoverabilityData extends org.apache.avro.specific.SpecificRecordBase
        implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ =
            new org.apache.avro.Schema.Parser()
                    .parse(
                            "{\"type\":\"record\",\"name\":\"EPViewDiscoverabilityData\",\"namespace\":\"sparqles.avro.analytics\",\"fields\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"boolean\"}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    @Deprecated public java.lang.CharSequence label;
    @Deprecated public boolean value;

    /**
     * Default constructor. Note that this does not initialize fields to their default values from
     * the schema. If that is desired then one should use {@link \#newBuilder()}.
     */
    public EPViewDiscoverabilityData() {}

    /** All-args constructor. */
    public EPViewDiscoverabilityData(java.lang.CharSequence label, java.lang.Boolean value) {
        this.label = label;
        this.value = value;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return label;
            case 1:
                return value;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                label = (java.lang.CharSequence) value$;
                break;
            case 1:
                value = (java.lang.Boolean) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /** Gets the value of the 'label' field. */
    public java.lang.CharSequence getLabel() {
        return label;
    }

    /**
     * Sets the value of the 'label' field.
     *
     * @param value the value to set.
     */
    public void setLabel(java.lang.CharSequence value) {
        this.label = value;
    }

    /** Gets the value of the 'value' field. */
    public java.lang.Boolean getValue() {
        return value;
    }

    /**
     * Sets the value of the 'value' field.
     *
     * @param value the value to set.
     */
    public void setValue(java.lang.Boolean value) {
        this.value = value;
    }

    /** Creates a new EPViewDiscoverabilityData RecordBuilder */
    public static sparqles.avro.analytics.EPViewDiscoverabilityData.Builder newBuilder() {
        return new sparqles.avro.analytics.EPViewDiscoverabilityData.Builder();
    }

    /** Creates a new EPViewDiscoverabilityData RecordBuilder by copying an existing Builder */
    public static sparqles.avro.analytics.EPViewDiscoverabilityData.Builder newBuilder(
            sparqles.avro.analytics.EPViewDiscoverabilityData.Builder other) {
        return new sparqles.avro.analytics.EPViewDiscoverabilityData.Builder(other);
    }

    /**
     * Creates a new EPViewDiscoverabilityData RecordBuilder by copying an existing
     * EPViewDiscoverabilityData instance
     */
    public static sparqles.avro.analytics.EPViewDiscoverabilityData.Builder newBuilder(
            sparqles.avro.analytics.EPViewDiscoverabilityData other) {
        return new sparqles.avro.analytics.EPViewDiscoverabilityData.Builder(other);
    }

    /** RecordBuilder for EPViewDiscoverabilityData instances. */
    public static class Builder
            extends org.apache.avro.specific.SpecificRecordBuilderBase<EPViewDiscoverabilityData>
            implements org.apache.avro.data.RecordBuilder<EPViewDiscoverabilityData> {

        private java.lang.CharSequence label;
        private boolean value;

        /** Creates a new Builder */
        private Builder() {
            super(sparqles.avro.analytics.EPViewDiscoverabilityData.SCHEMA$);
        }

        /** Creates a Builder by copying an existing Builder */
        private Builder(sparqles.avro.analytics.EPViewDiscoverabilityData.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.label)) {
                this.label = data().deepCopy(fields()[0].schema(), other.label);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.value)) {
                this.value = data().deepCopy(fields()[1].schema(), other.value);
                fieldSetFlags()[1] = true;
            }
        }

        /** Creates a Builder by copying an existing EPViewDiscoverabilityData instance */
        private Builder(sparqles.avro.analytics.EPViewDiscoverabilityData other) {
            super(sparqles.avro.analytics.EPViewDiscoverabilityData.SCHEMA$);
            if (isValidValue(fields()[0], other.label)) {
                this.label = data().deepCopy(fields()[0].schema(), other.label);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.value)) {
                this.value = data().deepCopy(fields()[1].schema(), other.value);
                fieldSetFlags()[1] = true;
            }
        }

        /** Gets the value of the 'label' field */
        public java.lang.CharSequence getLabel() {
            return label;
        }

        /** Sets the value of the 'label' field */
        public sparqles.avro.analytics.EPViewDiscoverabilityData.Builder setLabel(
                java.lang.CharSequence value) {
            validate(fields()[0], value);
            this.label = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /** Checks whether the 'label' field has been set */
        public boolean hasLabel() {
            return fieldSetFlags()[0];
        }

        /** Clears the value of the 'label' field */
        public sparqles.avro.analytics.EPViewDiscoverabilityData.Builder clearLabel() {
            label = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /** Gets the value of the 'value' field */
        public java.lang.Boolean getValue() {
            return value;
        }

        /** Sets the value of the 'value' field */
        public sparqles.avro.analytics.EPViewDiscoverabilityData.Builder setValue(boolean value) {
            validate(fields()[1], value);
            this.value = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /** Checks whether the 'value' field has been set */
        public boolean hasValue() {
            return fieldSetFlags()[1];
        }

        /** Clears the value of the 'value' field */
        public sparqles.avro.analytics.EPViewDiscoverabilityData.Builder clearValue() {
            fieldSetFlags()[1] = false;
            return this;
        }

        @Override
        public EPViewDiscoverabilityData build() {
            try {
                EPViewDiscoverabilityData record = new EPViewDiscoverabilityData();
                record.label =
                        fieldSetFlags()[0]
                                ? this.label
                                : (java.lang.CharSequence) defaultValue(fields()[0]);
                record.value =
                        fieldSetFlags()[1]
                                ? this.value
                                : (java.lang.Boolean) defaultValue(fields()[1]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
