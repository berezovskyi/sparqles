/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package sparqles.avro.analytics;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EPViewAvailabilityDataPoint extends org.apache.avro.specific.SpecificRecordBase
        implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ =
            new org.apache.avro.Schema.Parser()
                    .parse(
                            "{\"type\":\"record\",\"name\":\"EPViewAvailabilityDataPoint\",\"namespace\":\"sparqles.avro.analytics\",\"fields\":[{\"name\":\"x\",\"type\":\"long\"},{\"name\":\"y\",\"type\":\"double\"}]}");
    @Deprecated public long x;
    @Deprecated public double y;

    /**
     * Default constructor. Note that this does not initialize fields to their default values from
     * the schema. If that is desired then one should use {@link \#newBuilder()}.
     */
    public EPViewAvailabilityDataPoint() {}

    /** All-args constructor. */
    public EPViewAvailabilityDataPoint(java.lang.Long x, java.lang.Double y) {
        this.x = x;
        this.y = y;
    }

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    /** Creates a new EPViewAvailabilityDataPoint RecordBuilder */
    public static sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder newBuilder() {
        return new sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder();
    }

    /** Creates a new EPViewAvailabilityDataPoint RecordBuilder by copying an existing Builder */
    public static sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder newBuilder(
            sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder other) {
        return new sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder(other);
    }

    /**
     * Creates a new EPViewAvailabilityDataPoint RecordBuilder by copying an existing
     * EPViewAvailabilityDataPoint instance
     */
    public static sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder newBuilder(
            sparqles.avro.analytics.EPViewAvailabilityDataPoint other) {
        return new sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder(other);
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return x;
            case 1:
                return y;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                x = (java.lang.Long) value$;
                break;
            case 1:
                y = (java.lang.Double) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /** Gets the value of the 'x' field. */
    public java.lang.Long getX() {
        return x;
    }

    /**
     * Sets the value of the 'x' field.
     *
     * @param value the value to set.
     */
    public void setX(java.lang.Long value) {
        this.x = value;
    }

    /** Gets the value of the 'y' field. */
    public java.lang.Double getY() {
        return y;
    }

    /**
     * Sets the value of the 'y' field.
     *
     * @param value the value to set.
     */
    public void setY(java.lang.Double value) {
        this.y = value;
    }

    /** RecordBuilder for EPViewAvailabilityDataPoint instances. */
    public static class Builder
            extends org.apache.avro.specific.SpecificRecordBuilderBase<EPViewAvailabilityDataPoint>
            implements org.apache.avro.data.RecordBuilder<EPViewAvailabilityDataPoint> {

        private long x;
        private double y;

        /** Creates a new Builder */
        private Builder() {
            super(sparqles.avro.analytics.EPViewAvailabilityDataPoint.SCHEMA$);
        }

        /** Creates a Builder by copying an existing Builder */
        private Builder(sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.x)) {
                this.x = data().deepCopy(fields()[0].schema(), other.x);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.y)) {
                this.y = data().deepCopy(fields()[1].schema(), other.y);
                fieldSetFlags()[1] = true;
            }
        }

        /** Creates a Builder by copying an existing EPViewAvailabilityDataPoint instance */
        private Builder(sparqles.avro.analytics.EPViewAvailabilityDataPoint other) {
            super(sparqles.avro.analytics.EPViewAvailabilityDataPoint.SCHEMA$);
            if (isValidValue(fields()[0], other.x)) {
                this.x = data().deepCopy(fields()[0].schema(), other.x);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.y)) {
                this.y = data().deepCopy(fields()[1].schema(), other.y);
                fieldSetFlags()[1] = true;
            }
        }

        /** Gets the value of the 'x' field */
        public java.lang.Long getX() {
            return x;
        }

        /** Sets the value of the 'x' field */
        public sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder setX(long value) {
            validate(fields()[0], value);
            this.x = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /** Checks whether the 'x' field has been set */
        public boolean hasX() {
            return fieldSetFlags()[0];
        }

        /** Clears the value of the 'x' field */
        public sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder clearX() {
            fieldSetFlags()[0] = false;
            return this;
        }

        /** Gets the value of the 'y' field */
        public java.lang.Double getY() {
            return y;
        }

        /** Sets the value of the 'y' field */
        public sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder setY(double value) {
            validate(fields()[1], value);
            this.y = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /** Checks whether the 'y' field has been set */
        public boolean hasY() {
            return fieldSetFlags()[1];
        }

        /** Clears the value of the 'y' field */
        public sparqles.avro.analytics.EPViewAvailabilityDataPoint.Builder clearY() {
            fieldSetFlags()[1] = false;
            return this;
        }

        @Override
        public EPViewAvailabilityDataPoint build() {
            try {
                EPViewAvailabilityDataPoint record = new EPViewAvailabilityDataPoint();
                record.x = fieldSetFlags()[0] ? this.x : (java.lang.Long) defaultValue(fields()[0]);
                record.y =
                        fieldSetFlags()[1] ? this.y : (java.lang.Double) defaultValue(fields()[1]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
