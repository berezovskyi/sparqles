/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package sparqles.avro.analytics;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class AvailabilityView extends org.apache.avro.specific.SpecificRecordBase
        implements org.apache.avro.specific.SpecificRecord {
    private static final long serialVersionUID = 2061486749207014956L;

    public static final org.apache.avro.Schema SCHEMA$ =
            new org.apache.avro.Schema.Parser()
                    .parse(
                            "{\"type\":\"record\",\"name\":\"AvailabilityView\",\"namespace\":\"sparqles.avro.analytics\",\"fields\":[{\"name\":\"endpoint\",\"type\":{\"type\":\"record\",\"name\":\"Endpoint\",\"namespace\":\"sparqles.avro\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"datasets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Dataset\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"}]}}}]}},{\"name\":\"upNow\",\"type\":\"boolean\"},{\"name\":\"uptimeLast24h\",\"type\":\"double\"},{\"name\":\"uptimeLast7d\",\"type\":\"double\"},{\"name\":\"lastUpdate\",\"type\":\"long\"}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    private static final SpecificData MODEL$ = new SpecificData();

    private static final BinaryMessageEncoder<AvailabilityView> ENCODER =
            new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

    private static final BinaryMessageDecoder<AvailabilityView> DECODER =
            new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

    /**
     * Return the BinaryMessageEncoder instance used by this class.
     *
     * @return the message encoder used by this class
     */
    public static BinaryMessageEncoder<AvailabilityView> getEncoder() {
        return ENCODER;
    }

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     *
     * @return the message decoder used by this class
     */
    public static BinaryMessageDecoder<AvailabilityView> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link
     * SchemaStore}.
     *
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
     */
    public static BinaryMessageDecoder<AvailabilityView> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
    }

    /**
     * Serializes this AvailabilityView to a ByteBuffer.
     *
     * @return a buffer holding the serialized data for this instance
     * @throws java.io.IOException if this instance could not be serialized
     */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    /**
     * Deserializes a AvailabilityView from a ByteBuffer.
     *
     * @param b a byte buffer holding serialized data for an instance of this class
     * @return a AvailabilityView instance decoded from the given buffer
     * @throws java.io.IOException if the given bytes could not be deserialized into an instance of
     *     this class
     */
    public static AvailabilityView fromByteBuffer(java.nio.ByteBuffer b)
            throws java.io.IOException {
        return DECODER.decode(b);
    }

    private sparqles.avro.Endpoint endpoint;
    private boolean upNow;
    private double uptimeLast24h;
    private double uptimeLast7d;
    private long lastUpdate;

    /**
     * Default constructor. Note that this does not initialize fields to their default values from
     * the schema. If that is desired then one should use <code>newBuilder()</code>.
     */
    public AvailabilityView() {}

    /**
     * All-args constructor.
     *
     * @param endpoint The new value for endpoint
     * @param upNow The new value for upNow
     * @param uptimeLast24h The new value for uptimeLast24h
     * @param uptimeLast7d The new value for uptimeLast7d
     * @param lastUpdate The new value for lastUpdate
     */
    public AvailabilityView(
            sparqles.avro.Endpoint endpoint,
            java.lang.Boolean upNow,
            java.lang.Double uptimeLast24h,
            java.lang.Double uptimeLast7d,
            java.lang.Long lastUpdate) {
        this.endpoint = endpoint;
        this.upNow = upNow;
        this.uptimeLast24h = uptimeLast24h;
        this.uptimeLast7d = uptimeLast7d;
        this.lastUpdate = lastUpdate;
    }

    @Override
    public org.apache.avro.specific.SpecificData getSpecificData() {
        return MODEL$;
    }

    @Override
    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    @Override
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return endpoint;
            case 1:
                return upNow;
            case 2:
                return uptimeLast24h;
            case 3:
                return uptimeLast7d;
            case 4:
                return lastUpdate;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    // Used by DatumReader.  Applications should not call.
    @Override
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                endpoint = (sparqles.avro.Endpoint) value$;
                break;
            case 1:
                upNow = (java.lang.Boolean) value$;
                break;
            case 2:
                uptimeLast24h = (java.lang.Double) value$;
                break;
            case 3:
                uptimeLast7d = (java.lang.Double) value$;
                break;
            case 4:
                lastUpdate = (java.lang.Long) value$;
                break;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    /**
     * Gets the value of the 'endpoint' field.
     *
     * @return The value of the 'endpoint' field.
     */
    public sparqles.avro.Endpoint getEndpoint() {
        return endpoint;
    }

    /**
     * Sets the value of the 'endpoint' field.
     *
     * @param value the value to set.
     */
    public void setEndpoint(sparqles.avro.Endpoint value) {
        this.endpoint = value;
    }

    /**
     * Gets the value of the 'upNow' field.
     *
     * @return The value of the 'upNow' field.
     */
    public boolean getUpNow() {
        return upNow;
    }

    /**
     * Sets the value of the 'upNow' field.
     *
     * @param value the value to set.
     */
    public void setUpNow(boolean value) {
        this.upNow = value;
    }

    /**
     * Gets the value of the 'uptimeLast24h' field.
     *
     * @return The value of the 'uptimeLast24h' field.
     */
    public double getUptimeLast24h() {
        return uptimeLast24h;
    }

    /**
     * Sets the value of the 'uptimeLast24h' field.
     *
     * @param value the value to set.
     */
    public void setUptimeLast24h(double value) {
        this.uptimeLast24h = value;
    }

    /**
     * Gets the value of the 'uptimeLast7d' field.
     *
     * @return The value of the 'uptimeLast7d' field.
     */
    public double getUptimeLast7d() {
        return uptimeLast7d;
    }

    /**
     * Sets the value of the 'uptimeLast7d' field.
     *
     * @param value the value to set.
     */
    public void setUptimeLast7d(double value) {
        this.uptimeLast7d = value;
    }

    /**
     * Gets the value of the 'lastUpdate' field.
     *
     * @return The value of the 'lastUpdate' field.
     */
    public long getLastUpdate() {
        return lastUpdate;
    }

    /**
     * Sets the value of the 'lastUpdate' field.
     *
     * @param value the value to set.
     */
    public void setLastUpdate(long value) {
        this.lastUpdate = value;
    }

    /**
     * Creates a new AvailabilityView RecordBuilder.
     *
     * @return A new AvailabilityView RecordBuilder
     */
    public static sparqles.avro.analytics.AvailabilityView.Builder newBuilder() {
        return new sparqles.avro.analytics.AvailabilityView.Builder();
    }

    /**
     * Creates a new AvailabilityView RecordBuilder by copying an existing Builder.
     *
     * @param other The existing builder to copy.
     * @return A new AvailabilityView RecordBuilder
     */
    public static sparqles.avro.analytics.AvailabilityView.Builder newBuilder(
            sparqles.avro.analytics.AvailabilityView.Builder other) {
        if (other == null) {
            return new sparqles.avro.analytics.AvailabilityView.Builder();
        } else {
            return new sparqles.avro.analytics.AvailabilityView.Builder(other);
        }
    }

    /**
     * Creates a new AvailabilityView RecordBuilder by copying an existing AvailabilityView
     * instance.
     *
     * @param other The existing instance to copy.
     * @return A new AvailabilityView RecordBuilder
     */
    public static sparqles.avro.analytics.AvailabilityView.Builder newBuilder(
            sparqles.avro.analytics.AvailabilityView other) {
        if (other == null) {
            return new sparqles.avro.analytics.AvailabilityView.Builder();
        } else {
            return new sparqles.avro.analytics.AvailabilityView.Builder(other);
        }
    }

    /** RecordBuilder for AvailabilityView instances. */
    @org.apache.avro.specific.AvroGenerated
    public static class Builder
            extends org.apache.avro.specific.SpecificRecordBuilderBase<AvailabilityView>
            implements org.apache.avro.data.RecordBuilder<AvailabilityView> {

        private sparqles.avro.Endpoint endpoint;
        private sparqles.avro.Endpoint.Builder endpointBuilder;
        private boolean upNow;
        private double uptimeLast24h;
        private double uptimeLast7d;
        private long lastUpdate;

        /** Creates a new Builder */
        private Builder() {
            super(SCHEMA$, MODEL$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         *
         * @param other The existing Builder to copy.
         */
        private Builder(sparqles.avro.analytics.AvailabilityView.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.endpoint)) {
                this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
            if (other.hasEndpointBuilder()) {
                this.endpointBuilder =
                        sparqles.avro.Endpoint.newBuilder(other.getEndpointBuilder());
            }
            if (isValidValue(fields()[1], other.upNow)) {
                this.upNow = data().deepCopy(fields()[1].schema(), other.upNow);
                fieldSetFlags()[1] = other.fieldSetFlags()[1];
            }
            if (isValidValue(fields()[2], other.uptimeLast24h)) {
                this.uptimeLast24h = data().deepCopy(fields()[2].schema(), other.uptimeLast24h);
                fieldSetFlags()[2] = other.fieldSetFlags()[2];
            }
            if (isValidValue(fields()[3], other.uptimeLast7d)) {
                this.uptimeLast7d = data().deepCopy(fields()[3].schema(), other.uptimeLast7d);
                fieldSetFlags()[3] = other.fieldSetFlags()[3];
            }
            if (isValidValue(fields()[4], other.lastUpdate)) {
                this.lastUpdate = data().deepCopy(fields()[4].schema(), other.lastUpdate);
                fieldSetFlags()[4] = other.fieldSetFlags()[4];
            }
        }

        /**
         * Creates a Builder by copying an existing AvailabilityView instance
         *
         * @param other The existing instance to copy.
         */
        private Builder(sparqles.avro.analytics.AvailabilityView other) {
            super(SCHEMA$, MODEL$);
            if (isValidValue(fields()[0], other.endpoint)) {
                this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
                fieldSetFlags()[0] = true;
            }
            this.endpointBuilder = null;
            if (isValidValue(fields()[1], other.upNow)) {
                this.upNow = data().deepCopy(fields()[1].schema(), other.upNow);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.uptimeLast24h)) {
                this.uptimeLast24h = data().deepCopy(fields()[2].schema(), other.uptimeLast24h);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.uptimeLast7d)) {
                this.uptimeLast7d = data().deepCopy(fields()[3].schema(), other.uptimeLast7d);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.lastUpdate)) {
                this.lastUpdate = data().deepCopy(fields()[4].schema(), other.lastUpdate);
                fieldSetFlags()[4] = true;
            }
        }

        /**
         * Gets the value of the 'endpoint' field.
         *
         * @return The value.
         */
        public sparqles.avro.Endpoint getEndpoint() {
            return endpoint;
        }

        /**
         * Sets the value of the 'endpoint' field.
         *
         * @param value The value of 'endpoint'.
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder setEndpoint(
                sparqles.avro.Endpoint value) {
            validate(fields()[0], value);
            this.endpointBuilder = null;
            this.endpoint = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'endpoint' field has been set.
         *
         * @return True if the 'endpoint' field has been set, false otherwise.
         */
        public boolean hasEndpoint() {
            return fieldSetFlags()[0];
        }

        /**
         * Gets the Builder instance for the 'endpoint' field and creates one if it doesn't exist
         * yet.
         *
         * @return This builder.
         */
        public sparqles.avro.Endpoint.Builder getEndpointBuilder() {
            if (endpointBuilder == null) {
                if (hasEndpoint()) {
                    setEndpointBuilder(sparqles.avro.Endpoint.newBuilder(endpoint));
                } else {
                    setEndpointBuilder(sparqles.avro.Endpoint.newBuilder());
                }
            }
            return endpointBuilder;
        }

        /**
         * Sets the Builder instance for the 'endpoint' field
         *
         * @param value The builder instance that must be set.
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder setEndpointBuilder(
                sparqles.avro.Endpoint.Builder value) {
            clearEndpoint();
            endpointBuilder = value;
            return this;
        }

        /**
         * Checks whether the 'endpoint' field has an active Builder instance
         *
         * @return True if the 'endpoint' field has an active Builder instance
         */
        public boolean hasEndpointBuilder() {
            return endpointBuilder != null;
        }

        /**
         * Clears the value of the 'endpoint' field.
         *
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder clearEndpoint() {
            endpoint = null;
            endpointBuilder = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'upNow' field.
         *
         * @return The value.
         */
        public boolean getUpNow() {
            return upNow;
        }

        /**
         * Sets the value of the 'upNow' field.
         *
         * @param value The value of 'upNow'.
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder setUpNow(boolean value) {
            validate(fields()[1], value);
            this.upNow = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'upNow' field has been set.
         *
         * @return True if the 'upNow' field has been set, false otherwise.
         */
        public boolean hasUpNow() {
            return fieldSetFlags()[1];
        }

        /**
         * Clears the value of the 'upNow' field.
         *
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder clearUpNow() {
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'uptimeLast24h' field.
         *
         * @return The value.
         */
        public double getUptimeLast24h() {
            return uptimeLast24h;
        }

        /**
         * Sets the value of the 'uptimeLast24h' field.
         *
         * @param value The value of 'uptimeLast24h'.
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder setUptimeLast24h(double value) {
            validate(fields()[2], value);
            this.uptimeLast24h = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'uptimeLast24h' field has been set.
         *
         * @return True if the 'uptimeLast24h' field has been set, false otherwise.
         */
        public boolean hasUptimeLast24h() {
            return fieldSetFlags()[2];
        }

        /**
         * Clears the value of the 'uptimeLast24h' field.
         *
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder clearUptimeLast24h() {
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'uptimeLast7d' field.
         *
         * @return The value.
         */
        public double getUptimeLast7d() {
            return uptimeLast7d;
        }

        /**
         * Sets the value of the 'uptimeLast7d' field.
         *
         * @param value The value of 'uptimeLast7d'.
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder setUptimeLast7d(double value) {
            validate(fields()[3], value);
            this.uptimeLast7d = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'uptimeLast7d' field has been set.
         *
         * @return True if the 'uptimeLast7d' field has been set, false otherwise.
         */
        public boolean hasUptimeLast7d() {
            return fieldSetFlags()[3];
        }

        /**
         * Clears the value of the 'uptimeLast7d' field.
         *
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder clearUptimeLast7d() {
            fieldSetFlags()[3] = false;
            return this;
        }

        /**
         * Gets the value of the 'lastUpdate' field.
         *
         * @return The value.
         */
        public long getLastUpdate() {
            return lastUpdate;
        }

        /**
         * Sets the value of the 'lastUpdate' field.
         *
         * @param value The value of 'lastUpdate'.
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder setLastUpdate(long value) {
            validate(fields()[4], value);
            this.lastUpdate = value;
            fieldSetFlags()[4] = true;
            return this;
        }

        /**
         * Checks whether the 'lastUpdate' field has been set.
         *
         * @return True if the 'lastUpdate' field has been set, false otherwise.
         */
        public boolean hasLastUpdate() {
            return fieldSetFlags()[4];
        }

        /**
         * Clears the value of the 'lastUpdate' field.
         *
         * @return This builder.
         */
        public sparqles.avro.analytics.AvailabilityView.Builder clearLastUpdate() {
            fieldSetFlags()[4] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public AvailabilityView build() {
            try {
                AvailabilityView record = new AvailabilityView();
                if (endpointBuilder != null) {
                    try {
                        record.endpoint = this.endpointBuilder.build();
                    } catch (org.apache.avro.AvroMissingFieldException e) {
                        e.addParentField(record.getSchema().getField("endpoint"));
                        throw e;
                    }
                } else {
                    record.endpoint =
                            fieldSetFlags()[0]
                                    ? this.endpoint
                                    : (sparqles.avro.Endpoint) defaultValue(fields()[0]);
                }
                record.upNow =
                        fieldSetFlags()[1]
                                ? this.upNow
                                : (java.lang.Boolean) defaultValue(fields()[1]);
                record.uptimeLast24h =
                        fieldSetFlags()[2]
                                ? this.uptimeLast24h
                                : (java.lang.Double) defaultValue(fields()[2]);
                record.uptimeLast7d =
                        fieldSetFlags()[3]
                                ? this.uptimeLast7d
                                : (java.lang.Double) defaultValue(fields()[3]);
                record.lastUpdate =
                        fieldSetFlags()[4]
                                ? this.lastUpdate
                                : (java.lang.Long) defaultValue(fields()[4]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (java.lang.Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<AvailabilityView> WRITER$ =
            (org.apache.avro.io.DatumWriter<AvailabilityView>) MODEL$.createDatumWriter(SCHEMA$);

    @Override
    public void writeExternal(java.io.ObjectOutput out) throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<AvailabilityView> READER$ =
            (org.apache.avro.io.DatumReader<AvailabilityView>) MODEL$.createDatumReader(SCHEMA$);

    @Override
    public void readExternal(java.io.ObjectInput in) throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

    @Override
    protected boolean hasCustomCoders() {
        return true;
    }

    @Override
    public void customEncode(org.apache.avro.io.Encoder out) throws java.io.IOException {
        this.endpoint.customEncode(out);

        out.writeBoolean(this.upNow);

        out.writeDouble(this.uptimeLast24h);

        out.writeDouble(this.uptimeLast7d);

        out.writeLong(this.lastUpdate);
    }

    @Override
    public void customDecode(org.apache.avro.io.ResolvingDecoder in) throws java.io.IOException {
        org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
        if (fieldOrder == null) {
            if (this.endpoint == null) {
                this.endpoint = new sparqles.avro.Endpoint();
            }
            this.endpoint.customDecode(in);

            this.upNow = in.readBoolean();

            this.uptimeLast24h = in.readDouble();

            this.uptimeLast7d = in.readDouble();

            this.lastUpdate = in.readLong();

        } else {
            for (int i = 0; i < 5; i++) {
                switch (fieldOrder[i].pos()) {
                    case 0:
                        if (this.endpoint == null) {
                            this.endpoint = new sparqles.avro.Endpoint();
                        }
                        this.endpoint.customDecode(in);
                        break;

                    case 1:
                        this.upNow = in.readBoolean();
                        break;

                    case 2:
                        this.uptimeLast24h = in.readDouble();
                        break;

                    case 3:
                        this.uptimeLast7d = in.readDouble();
                        break;

                    case 4:
                        this.lastUpdate = in.readLong();
                        break;

                    default:
                        throw new java.io.IOException("Corrupt ResolvingDecoder.");
                }
            }
        }
    }
}
