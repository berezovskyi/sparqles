/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package sparqles.avro.analytics;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PerformanceView extends org.apache.avro.specific.SpecificRecordBase
        implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ =
            new org.apache.avro.Schema.Parser()
                    .parse(
                            "{\"type\":\"record\",\"name\":\"PerformanceView\",\"namespace\":\"sparqles.avro.analytics\",\"fields\":[{\"name\":\"endpoint\",\"type\":{\"type\":\"record\",\"name\":\"Endpoint\",\"namespace\":\"sparqles.avro\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"datasets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Dataset\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"}]}}}]}},{\"name\":\"askMeanCold\",\"type\":\"double\"},{\"name\":\"askMeanWarm\",\"type\":\"double\"},{\"name\":\"joinMeanCold\",\"type\":\"double\"},{\"name\":\"joinMeanWarm\",\"type\":\"double\"},{\"name\":\"lastUpdate\",\"type\":\"long\"},{\"name\":\"threshold\",\"type\":\"long\"}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    @Deprecated public sparqles.avro.Endpoint endpoint;
    @Deprecated public double askMeanCold;
    @Deprecated public double askMeanWarm;
    @Deprecated public double joinMeanCold;
    @Deprecated public double joinMeanWarm;
    @Deprecated public long lastUpdate;
    @Deprecated public long threshold;

    /**
     * Default constructor. Note that this does not initialize fields to their default values from
     * the schema. If that is desired then one should use {@link \#newBuilder()}.
     */
    public PerformanceView() {}

    /** All-args constructor. */
    public PerformanceView(
            sparqles.avro.Endpoint endpoint,
            java.lang.Double askMeanCold,
            java.lang.Double askMeanWarm,
            java.lang.Double joinMeanCold,
            java.lang.Double joinMeanWarm,
            java.lang.Long lastUpdate,
            java.lang.Long threshold) {
        this.endpoint = endpoint;
        this.askMeanCold = askMeanCold;
        this.askMeanWarm = askMeanWarm;
        this.joinMeanCold = joinMeanCold;
        this.joinMeanWarm = joinMeanWarm;
        this.lastUpdate = lastUpdate;
        this.threshold = threshold;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return endpoint;
            case 1:
                return askMeanCold;
            case 2:
                return askMeanWarm;
            case 3:
                return joinMeanCold;
            case 4:
                return joinMeanWarm;
            case 5:
                return lastUpdate;
            case 6:
                return threshold;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                endpoint = (sparqles.avro.Endpoint) value$;
                break;
            case 1:
                askMeanCold = (java.lang.Double) value$;
                break;
            case 2:
                askMeanWarm = (java.lang.Double) value$;
                break;
            case 3:
                joinMeanCold = (java.lang.Double) value$;
                break;
            case 4:
                joinMeanWarm = (java.lang.Double) value$;
                break;
            case 5:
                lastUpdate = (java.lang.Long) value$;
                break;
            case 6:
                threshold = (java.lang.Long) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /** Gets the value of the 'endpoint' field. */
    public sparqles.avro.Endpoint getEndpoint() {
        return endpoint;
    }

    /**
     * Sets the value of the 'endpoint' field.
     *
     * @param value the value to set.
     */
    public void setEndpoint(sparqles.avro.Endpoint value) {
        this.endpoint = value;
    }

    /** Gets the value of the 'askMeanCold' field. */
    public java.lang.Double getAskMeanCold() {
        return askMeanCold;
    }

    /**
     * Sets the value of the 'askMeanCold' field.
     *
     * @param value the value to set.
     */
    public void setAskMeanCold(java.lang.Double value) {
        this.askMeanCold = value;
    }

    /** Gets the value of the 'askMeanWarm' field. */
    public java.lang.Double getAskMeanWarm() {
        return askMeanWarm;
    }

    /**
     * Sets the value of the 'askMeanWarm' field.
     *
     * @param value the value to set.
     */
    public void setAskMeanWarm(java.lang.Double value) {
        this.askMeanWarm = value;
    }

    /** Gets the value of the 'joinMeanCold' field. */
    public java.lang.Double getJoinMeanCold() {
        return joinMeanCold;
    }

    /**
     * Sets the value of the 'joinMeanCold' field.
     *
     * @param value the value to set.
     */
    public void setJoinMeanCold(java.lang.Double value) {
        this.joinMeanCold = value;
    }

    /** Gets the value of the 'joinMeanWarm' field. */
    public java.lang.Double getJoinMeanWarm() {
        return joinMeanWarm;
    }

    /**
     * Sets the value of the 'joinMeanWarm' field.
     *
     * @param value the value to set.
     */
    public void setJoinMeanWarm(java.lang.Double value) {
        this.joinMeanWarm = value;
    }

    /** Gets the value of the 'lastUpdate' field. */
    public java.lang.Long getLastUpdate() {
        return lastUpdate;
    }

    /**
     * Sets the value of the 'lastUpdate' field.
     *
     * @param value the value to set.
     */
    public void setLastUpdate(java.lang.Long value) {
        this.lastUpdate = value;
    }

    /** Gets the value of the 'threshold' field. */
    public java.lang.Long getThreshold() {
        return threshold;
    }

    /**
     * Sets the value of the 'threshold' field.
     *
     * @param value the value to set.
     */
    public void setThreshold(java.lang.Long value) {
        this.threshold = value;
    }

    /** Creates a new PerformanceView RecordBuilder */
    public static sparqles.avro.analytics.PerformanceView.Builder newBuilder() {
        return new sparqles.avro.analytics.PerformanceView.Builder();
    }

    /** Creates a new PerformanceView RecordBuilder by copying an existing Builder */
    public static sparqles.avro.analytics.PerformanceView.Builder newBuilder(
            sparqles.avro.analytics.PerformanceView.Builder other) {
        return new sparqles.avro.analytics.PerformanceView.Builder(other);
    }

    /**
     * Creates a new PerformanceView RecordBuilder by copying an existing PerformanceView instance
     */
    public static sparqles.avro.analytics.PerformanceView.Builder newBuilder(
            sparqles.avro.analytics.PerformanceView other) {
        return new sparqles.avro.analytics.PerformanceView.Builder(other);
    }

    /** RecordBuilder for PerformanceView instances. */
    public static class Builder
            extends org.apache.avro.specific.SpecificRecordBuilderBase<PerformanceView>
            implements org.apache.avro.data.RecordBuilder<PerformanceView> {

        private sparqles.avro.Endpoint endpoint;
        private double askMeanCold;
        private double askMeanWarm;
        private double joinMeanCold;
        private double joinMeanWarm;
        private long lastUpdate;
        private long threshold;

        /** Creates a new Builder */
        private Builder() {
            super(sparqles.avro.analytics.PerformanceView.SCHEMA$);
        }

        /** Creates a Builder by copying an existing Builder */
        private Builder(sparqles.avro.analytics.PerformanceView.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.endpoint)) {
                this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.askMeanCold)) {
                this.askMeanCold = data().deepCopy(fields()[1].schema(), other.askMeanCold);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.askMeanWarm)) {
                this.askMeanWarm = data().deepCopy(fields()[2].schema(), other.askMeanWarm);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.joinMeanCold)) {
                this.joinMeanCold = data().deepCopy(fields()[3].schema(), other.joinMeanCold);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.joinMeanWarm)) {
                this.joinMeanWarm = data().deepCopy(fields()[4].schema(), other.joinMeanWarm);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.lastUpdate)) {
                this.lastUpdate = data().deepCopy(fields()[5].schema(), other.lastUpdate);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.threshold)) {
                this.threshold = data().deepCopy(fields()[6].schema(), other.threshold);
                fieldSetFlags()[6] = true;
            }
        }

        /** Creates a Builder by copying an existing PerformanceView instance */
        private Builder(sparqles.avro.analytics.PerformanceView other) {
            super(sparqles.avro.analytics.PerformanceView.SCHEMA$);
            if (isValidValue(fields()[0], other.endpoint)) {
                this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.askMeanCold)) {
                this.askMeanCold = data().deepCopy(fields()[1].schema(), other.askMeanCold);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.askMeanWarm)) {
                this.askMeanWarm = data().deepCopy(fields()[2].schema(), other.askMeanWarm);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.joinMeanCold)) {
                this.joinMeanCold = data().deepCopy(fields()[3].schema(), other.joinMeanCold);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.joinMeanWarm)) {
                this.joinMeanWarm = data().deepCopy(fields()[4].schema(), other.joinMeanWarm);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.lastUpdate)) {
                this.lastUpdate = data().deepCopy(fields()[5].schema(), other.lastUpdate);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.threshold)) {
                this.threshold = data().deepCopy(fields()[6].schema(), other.threshold);
                fieldSetFlags()[6] = true;
            }
        }

        /** Gets the value of the 'endpoint' field */
        public sparqles.avro.Endpoint getEndpoint() {
            return endpoint;
        }

        /** Sets the value of the 'endpoint' field */
        public sparqles.avro.analytics.PerformanceView.Builder setEndpoint(
                sparqles.avro.Endpoint value) {
            validate(fields()[0], value);
            this.endpoint = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /** Checks whether the 'endpoint' field has been set */
        public boolean hasEndpoint() {
            return fieldSetFlags()[0];
        }

        /** Clears the value of the 'endpoint' field */
        public sparqles.avro.analytics.PerformanceView.Builder clearEndpoint() {
            endpoint = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /** Gets the value of the 'askMeanCold' field */
        public java.lang.Double getAskMeanCold() {
            return askMeanCold;
        }

        /** Sets the value of the 'askMeanCold' field */
        public sparqles.avro.analytics.PerformanceView.Builder setAskMeanCold(double value) {
            validate(fields()[1], value);
            this.askMeanCold = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /** Checks whether the 'askMeanCold' field has been set */
        public boolean hasAskMeanCold() {
            return fieldSetFlags()[1];
        }

        /** Clears the value of the 'askMeanCold' field */
        public sparqles.avro.analytics.PerformanceView.Builder clearAskMeanCold() {
            fieldSetFlags()[1] = false;
            return this;
        }

        /** Gets the value of the 'askMeanWarm' field */
        public java.lang.Double getAskMeanWarm() {
            return askMeanWarm;
        }

        /** Sets the value of the 'askMeanWarm' field */
        public sparqles.avro.analytics.PerformanceView.Builder setAskMeanWarm(double value) {
            validate(fields()[2], value);
            this.askMeanWarm = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /** Checks whether the 'askMeanWarm' field has been set */
        public boolean hasAskMeanWarm() {
            return fieldSetFlags()[2];
        }

        /** Clears the value of the 'askMeanWarm' field */
        public sparqles.avro.analytics.PerformanceView.Builder clearAskMeanWarm() {
            fieldSetFlags()[2] = false;
            return this;
        }

        /** Gets the value of the 'joinMeanCold' field */
        public java.lang.Double getJoinMeanCold() {
            return joinMeanCold;
        }

        /** Sets the value of the 'joinMeanCold' field */
        public sparqles.avro.analytics.PerformanceView.Builder setJoinMeanCold(double value) {
            validate(fields()[3], value);
            this.joinMeanCold = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /** Checks whether the 'joinMeanCold' field has been set */
        public boolean hasJoinMeanCold() {
            return fieldSetFlags()[3];
        }

        /** Clears the value of the 'joinMeanCold' field */
        public sparqles.avro.analytics.PerformanceView.Builder clearJoinMeanCold() {
            fieldSetFlags()[3] = false;
            return this;
        }

        /** Gets the value of the 'joinMeanWarm' field */
        public java.lang.Double getJoinMeanWarm() {
            return joinMeanWarm;
        }

        /** Sets the value of the 'joinMeanWarm' field */
        public sparqles.avro.analytics.PerformanceView.Builder setJoinMeanWarm(double value) {
            validate(fields()[4], value);
            this.joinMeanWarm = value;
            fieldSetFlags()[4] = true;
            return this;
        }

        /** Checks whether the 'joinMeanWarm' field has been set */
        public boolean hasJoinMeanWarm() {
            return fieldSetFlags()[4];
        }

        /** Clears the value of the 'joinMeanWarm' field */
        public sparqles.avro.analytics.PerformanceView.Builder clearJoinMeanWarm() {
            fieldSetFlags()[4] = false;
            return this;
        }

        /** Gets the value of the 'lastUpdate' field */
        public java.lang.Long getLastUpdate() {
            return lastUpdate;
        }

        /** Sets the value of the 'lastUpdate' field */
        public sparqles.avro.analytics.PerformanceView.Builder setLastUpdate(long value) {
            validate(fields()[5], value);
            this.lastUpdate = value;
            fieldSetFlags()[5] = true;
            return this;
        }

        /** Checks whether the 'lastUpdate' field has been set */
        public boolean hasLastUpdate() {
            return fieldSetFlags()[5];
        }

        /** Clears the value of the 'lastUpdate' field */
        public sparqles.avro.analytics.PerformanceView.Builder clearLastUpdate() {
            fieldSetFlags()[5] = false;
            return this;
        }

        /** Gets the value of the 'threshold' field */
        public java.lang.Long getThreshold() {
            return threshold;
        }

        /** Sets the value of the 'threshold' field */
        public sparqles.avro.analytics.PerformanceView.Builder setThreshold(long value) {
            validate(fields()[6], value);
            this.threshold = value;
            fieldSetFlags()[6] = true;
            return this;
        }

        /** Checks whether the 'threshold' field has been set */
        public boolean hasThreshold() {
            return fieldSetFlags()[6];
        }

        /** Clears the value of the 'threshold' field */
        public sparqles.avro.analytics.PerformanceView.Builder clearThreshold() {
            fieldSetFlags()[6] = false;
            return this;
        }

        @Override
        public PerformanceView build() {
            try {
                PerformanceView record = new PerformanceView();
                record.endpoint =
                        fieldSetFlags()[0]
                                ? this.endpoint
                                : (sparqles.avro.Endpoint) defaultValue(fields()[0]);
                record.askMeanCold =
                        fieldSetFlags()[1]
                                ? this.askMeanCold
                                : (java.lang.Double) defaultValue(fields()[1]);
                record.askMeanWarm =
                        fieldSetFlags()[2]
                                ? this.askMeanWarm
                                : (java.lang.Double) defaultValue(fields()[2]);
                record.joinMeanCold =
                        fieldSetFlags()[3]
                                ? this.joinMeanCold
                                : (java.lang.Double) defaultValue(fields()[3]);
                record.joinMeanWarm =
                        fieldSetFlags()[4]
                                ? this.joinMeanWarm
                                : (java.lang.Double) defaultValue(fields()[4]);
                record.lastUpdate =
                        fieldSetFlags()[5]
                                ? this.lastUpdate
                                : (java.lang.Long) defaultValue(fields()[5]);
                record.threshold =
                        fieldSetFlags()[6]
                                ? this.threshold
                                : (java.lang.Long) defaultValue(fields()[6]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
