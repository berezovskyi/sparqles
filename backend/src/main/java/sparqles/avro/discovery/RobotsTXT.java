/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package sparqles.avro.discovery;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RobotsTXT extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RobotsTXT\",\"namespace\":\"sparqles.avro.discovery\",\"fields\":[{\"name\":\"hasRobotsTXT\",\"type\":\"boolean\",\"default\":false},{\"name\":\"allowedByRobotsTXT\",\"type\":\"boolean\",\"default\":true},{\"name\":\"sitemapXML\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sitemapXMLSPARQL\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sitemapXMLSPARQLMatch\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sitemapXMLVoiD\",\"type\":\"boolean\",\"default\":false},{\"name\":\"Exception\",\"type\":[\"string\",\"null\"]}]}");
    @Deprecated public boolean hasRobotsTXT;
    @Deprecated public boolean allowedByRobotsTXT;
    @Deprecated public boolean sitemapXML;
    @Deprecated public boolean sitemapXMLSPARQL;
    @Deprecated public boolean sitemapXMLSPARQLMatch;
    @Deprecated public boolean sitemapXMLVoiD;
    @Deprecated public java.lang.CharSequence Exception;
    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use {@link \#newBuilder()}. 
     */
    public RobotsTXT() {
    }
    
    /**
     * All-args constructor.
     */
    public RobotsTXT(java.lang.Boolean hasRobotsTXT, java.lang.Boolean allowedByRobotsTXT, java.lang.Boolean sitemapXML, java.lang.Boolean sitemapXMLSPARQL, java.lang.Boolean sitemapXMLSPARQLMatch, java.lang.Boolean sitemapXMLVoiD, java.lang.CharSequence Exception) {
        this.hasRobotsTXT = hasRobotsTXT;
        this.allowedByRobotsTXT = allowedByRobotsTXT;
        this.sitemapXML = sitemapXML;
        this.sitemapXMLSPARQL = sitemapXMLSPARQL;
        this.sitemapXMLSPARQLMatch = sitemapXMLSPARQLMatch;
        this.sitemapXMLVoiD = sitemapXMLVoiD;
        this.Exception = Exception;
    }
    
    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }
    
    /** Creates a new RobotsTXT RecordBuilder */
    public static sparqles.avro.discovery.RobotsTXT.Builder newBuilder() {
        return new sparqles.avro.discovery.RobotsTXT.Builder();
    }
    
    /** Creates a new RobotsTXT RecordBuilder by copying an existing Builder */
    public static sparqles.avro.discovery.RobotsTXT.Builder newBuilder(sparqles.avro.discovery.RobotsTXT.Builder other) {
        return new sparqles.avro.discovery.RobotsTXT.Builder(other);
    }
    
    /** Creates a new RobotsTXT RecordBuilder by copying an existing RobotsTXT instance */
    public static sparqles.avro.discovery.RobotsTXT.Builder newBuilder(sparqles.avro.discovery.RobotsTXT other) {
        return new sparqles.avro.discovery.RobotsTXT.Builder(other);
    }
    
    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }
    
    // Used by DatumWriter.  Applications should not call. 
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return hasRobotsTXT;
            case 1:
                return allowedByRobotsTXT;
            case 2:
                return sitemapXML;
            case 3:
                return sitemapXMLSPARQL;
            case 4:
                return sitemapXMLSPARQLMatch;
            case 5:
                return sitemapXMLVoiD;
            case 6:
                return Exception;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }
    
    // Used by DatumReader.  Applications should not call. 
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                hasRobotsTXT = (java.lang.Boolean) value$;
                break;
            case 1:
                allowedByRobotsTXT = (java.lang.Boolean) value$;
                break;
            case 2:
                sitemapXML = (java.lang.Boolean) value$;
                break;
            case 3:
                sitemapXMLSPARQL = (java.lang.Boolean) value$;
                break;
            case 4:
                sitemapXMLSPARQLMatch = (java.lang.Boolean) value$;
                break;
            case 5:
                sitemapXMLVoiD = (java.lang.Boolean) value$;
                break;
            case 6:
                Exception = (java.lang.CharSequence) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }
    
    /**
     * Gets the value of the 'hasRobotsTXT' field.
     */
    public java.lang.Boolean getHasRobotsTXT() {
        return hasRobotsTXT;
    }
    
    /**
     * Sets the value of the 'hasRobotsTXT' field.
     * @param value the value to set.
     */
    public void setHasRobotsTXT(java.lang.Boolean value) {
        this.hasRobotsTXT = value;
    }
    
    /**
     * Gets the value of the 'allowedByRobotsTXT' field.
     */
    public java.lang.Boolean getAllowedByRobotsTXT() {
        return allowedByRobotsTXT;
    }
    
    /**
     * Sets the value of the 'allowedByRobotsTXT' field.
     * @param value the value to set.
     */
    public void setAllowedByRobotsTXT(java.lang.Boolean value) {
        this.allowedByRobotsTXT = value;
    }
    
    /**
     * Gets the value of the 'sitemapXML' field.
     */
    public java.lang.Boolean getSitemapXML() {
        return sitemapXML;
    }
    
    /**
     * Sets the value of the 'sitemapXML' field.
     * @param value the value to set.
     */
    public void setSitemapXML(java.lang.Boolean value) {
        this.sitemapXML = value;
    }
    
    /**
     * Gets the value of the 'sitemapXMLSPARQL' field.
     */
    public java.lang.Boolean getSitemapXMLSPARQL() {
        return sitemapXMLSPARQL;
    }
    
    /**
     * Sets the value of the 'sitemapXMLSPARQL' field.
     * @param value the value to set.
     */
    public void setSitemapXMLSPARQL(java.lang.Boolean value) {
        this.sitemapXMLSPARQL = value;
    }
    
    /**
     * Gets the value of the 'sitemapXMLSPARQLMatch' field.
     */
    public java.lang.Boolean getSitemapXMLSPARQLMatch() {
        return sitemapXMLSPARQLMatch;
    }
    
    /**
     * Sets the value of the 'sitemapXMLSPARQLMatch' field.
     * @param value the value to set.
     */
    public void setSitemapXMLSPARQLMatch(java.lang.Boolean value) {
        this.sitemapXMLSPARQLMatch = value;
    }
    
    /**
     * Gets the value of the 'sitemapXMLVoiD' field.
     */
    public java.lang.Boolean getSitemapXMLVoiD() {
        return sitemapXMLVoiD;
    }
    
    /**
     * Sets the value of the 'sitemapXMLVoiD' field.
     * @param value the value to set.
     */
    public void setSitemapXMLVoiD(java.lang.Boolean value) {
        this.sitemapXMLVoiD = value;
    }
    
    /**
     * Gets the value of the 'Exception' field.
     */
    public java.lang.CharSequence getException() {
        return Exception;
    }
    
    /**
     * Sets the value of the 'Exception' field.
     * @param value the value to set.
     */
    public void setException(java.lang.CharSequence value) {
        this.Exception = value;
    }
    
    /**
     * RecordBuilder for RobotsTXT instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RobotsTXT>
        implements org.apache.avro.data.RecordBuilder<RobotsTXT> {
        
        private boolean hasRobotsTXT;
        private boolean allowedByRobotsTXT;
        private boolean sitemapXML;
        private boolean sitemapXMLSPARQL;
        private boolean sitemapXMLSPARQLMatch;
        private boolean sitemapXMLVoiD;
        private java.lang.CharSequence Exception;
        
        /** Creates a new Builder */
        private Builder() {
            super(sparqles.avro.discovery.RobotsTXT.SCHEMA$);
        }
        
        /** Creates a Builder by copying an existing Builder */
        private Builder(sparqles.avro.discovery.RobotsTXT.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.hasRobotsTXT)) {
                this.hasRobotsTXT = data().deepCopy(fields()[0].schema(), other.hasRobotsTXT);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.allowedByRobotsTXT)) {
                this.allowedByRobotsTXT = data().deepCopy(fields()[1].schema(), other.allowedByRobotsTXT);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.sitemapXML)) {
                this.sitemapXML = data().deepCopy(fields()[2].schema(), other.sitemapXML);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.sitemapXMLSPARQL)) {
                this.sitemapXMLSPARQL = data().deepCopy(fields()[3].schema(), other.sitemapXMLSPARQL);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.sitemapXMLSPARQLMatch)) {
                this.sitemapXMLSPARQLMatch = data().deepCopy(fields()[4].schema(), other.sitemapXMLSPARQLMatch);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.sitemapXMLVoiD)) {
                this.sitemapXMLVoiD = data().deepCopy(fields()[5].schema(), other.sitemapXMLVoiD);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.Exception)) {
                this.Exception = data().deepCopy(fields()[6].schema(), other.Exception);
                fieldSetFlags()[6] = true;
            }
        }
        
        /** Creates a Builder by copying an existing RobotsTXT instance */
        private Builder(sparqles.avro.discovery.RobotsTXT other) {
            super(sparqles.avro.discovery.RobotsTXT.SCHEMA$);
            if (isValidValue(fields()[0], other.hasRobotsTXT)) {
                this.hasRobotsTXT = data().deepCopy(fields()[0].schema(), other.hasRobotsTXT);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.allowedByRobotsTXT)) {
                this.allowedByRobotsTXT = data().deepCopy(fields()[1].schema(), other.allowedByRobotsTXT);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.sitemapXML)) {
                this.sitemapXML = data().deepCopy(fields()[2].schema(), other.sitemapXML);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.sitemapXMLSPARQL)) {
                this.sitemapXMLSPARQL = data().deepCopy(fields()[3].schema(), other.sitemapXMLSPARQL);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.sitemapXMLSPARQLMatch)) {
                this.sitemapXMLSPARQLMatch = data().deepCopy(fields()[4].schema(), other.sitemapXMLSPARQLMatch);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.sitemapXMLVoiD)) {
                this.sitemapXMLVoiD = data().deepCopy(fields()[5].schema(), other.sitemapXMLVoiD);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.Exception)) {
                this.Exception = data().deepCopy(fields()[6].schema(), other.Exception);
                fieldSetFlags()[6] = true;
            }
        }
        
        /** Gets the value of the 'hasRobotsTXT' field */
        public java.lang.Boolean getHasRobotsTXT() {
            return hasRobotsTXT;
        }
        
        /** Sets the value of the 'hasRobotsTXT' field */
        public sparqles.avro.discovery.RobotsTXT.Builder setHasRobotsTXT(boolean value) {
            validate(fields()[0], value);
            this.hasRobotsTXT = value;
            fieldSetFlags()[0] = true;
            return this;
        }
        
        /** Checks whether the 'hasRobotsTXT' field has been set */
        public boolean hasHasRobotsTXT() {
            return fieldSetFlags()[0];
        }
        
        /** Clears the value of the 'hasRobotsTXT' field */
        public sparqles.avro.discovery.RobotsTXT.Builder clearHasRobotsTXT() {
            fieldSetFlags()[0] = false;
            return this;
        }
        
        /** Gets the value of the 'allowedByRobotsTXT' field */
        public java.lang.Boolean getAllowedByRobotsTXT() {
            return allowedByRobotsTXT;
        }
        
        /** Sets the value of the 'allowedByRobotsTXT' field */
        public sparqles.avro.discovery.RobotsTXT.Builder setAllowedByRobotsTXT(boolean value) {
            validate(fields()[1], value);
            this.allowedByRobotsTXT = value;
            fieldSetFlags()[1] = true;
            return this;
        }
        
        /** Checks whether the 'allowedByRobotsTXT' field has been set */
        public boolean hasAllowedByRobotsTXT() {
            return fieldSetFlags()[1];
        }
        
        /** Clears the value of the 'allowedByRobotsTXT' field */
        public sparqles.avro.discovery.RobotsTXT.Builder clearAllowedByRobotsTXT() {
            fieldSetFlags()[1] = false;
            return this;
        }
        
        /** Gets the value of the 'sitemapXML' field */
        public java.lang.Boolean getSitemapXML() {
            return sitemapXML;
        }
        
        /** Sets the value of the 'sitemapXML' field */
        public sparqles.avro.discovery.RobotsTXT.Builder setSitemapXML(boolean value) {
            validate(fields()[2], value);
            this.sitemapXML = value;
            fieldSetFlags()[2] = true;
            return this;
        }
        
        /** Checks whether the 'sitemapXML' field has been set */
        public boolean hasSitemapXML() {
            return fieldSetFlags()[2];
        }
        
        /** Clears the value of the 'sitemapXML' field */
        public sparqles.avro.discovery.RobotsTXT.Builder clearSitemapXML() {
            fieldSetFlags()[2] = false;
            return this;
        }
        
        /** Gets the value of the 'sitemapXMLSPARQL' field */
        public java.lang.Boolean getSitemapXMLSPARQL() {
            return sitemapXMLSPARQL;
        }
        
        /** Sets the value of the 'sitemapXMLSPARQL' field */
        public sparqles.avro.discovery.RobotsTXT.Builder setSitemapXMLSPARQL(boolean value) {
            validate(fields()[3], value);
            this.sitemapXMLSPARQL = value;
            fieldSetFlags()[3] = true;
            return this;
        }
        
        /** Checks whether the 'sitemapXMLSPARQL' field has been set */
        public boolean hasSitemapXMLSPARQL() {
            return fieldSetFlags()[3];
        }
        
        /** Clears the value of the 'sitemapXMLSPARQL' field */
        public sparqles.avro.discovery.RobotsTXT.Builder clearSitemapXMLSPARQL() {
            fieldSetFlags()[3] = false;
            return this;
        }
        
        /** Gets the value of the 'sitemapXMLSPARQLMatch' field */
        public java.lang.Boolean getSitemapXMLSPARQLMatch() {
            return sitemapXMLSPARQLMatch;
        }
        
        /** Sets the value of the 'sitemapXMLSPARQLMatch' field */
        public sparqles.avro.discovery.RobotsTXT.Builder setSitemapXMLSPARQLMatch(boolean value) {
            validate(fields()[4], value);
            this.sitemapXMLSPARQLMatch = value;
            fieldSetFlags()[4] = true;
            return this;
        }
        
        /** Checks whether the 'sitemapXMLSPARQLMatch' field has been set */
        public boolean hasSitemapXMLSPARQLMatch() {
            return fieldSetFlags()[4];
        }
        
        /** Clears the value of the 'sitemapXMLSPARQLMatch' field */
        public sparqles.avro.discovery.RobotsTXT.Builder clearSitemapXMLSPARQLMatch() {
            fieldSetFlags()[4] = false;
            return this;
        }
        
        /** Gets the value of the 'sitemapXMLVoiD' field */
        public java.lang.Boolean getSitemapXMLVoiD() {
            return sitemapXMLVoiD;
        }
        
        /** Sets the value of the 'sitemapXMLVoiD' field */
        public sparqles.avro.discovery.RobotsTXT.Builder setSitemapXMLVoiD(boolean value) {
            validate(fields()[5], value);
            this.sitemapXMLVoiD = value;
            fieldSetFlags()[5] = true;
            return this;
        }
        
        /** Checks whether the 'sitemapXMLVoiD' field has been set */
        public boolean hasSitemapXMLVoiD() {
            return fieldSetFlags()[5];
        }
        
        /** Clears the value of the 'sitemapXMLVoiD' field */
        public sparqles.avro.discovery.RobotsTXT.Builder clearSitemapXMLVoiD() {
            fieldSetFlags()[5] = false;
            return this;
        }
        
        /** Gets the value of the 'Exception' field */
        public java.lang.CharSequence getException() {
            return Exception;
        }
        
        /** Sets the value of the 'Exception' field */
        public sparqles.avro.discovery.RobotsTXT.Builder setException(java.lang.CharSequence value) {
            validate(fields()[6], value);
            this.Exception = value;
            fieldSetFlags()[6] = true;
            return this;
        }
        
        /** Checks whether the 'Exception' field has been set */
        public boolean hasException() {
            return fieldSetFlags()[6];
        }
        
        /** Clears the value of the 'Exception' field */
        public sparqles.avro.discovery.RobotsTXT.Builder clearException() {
            Exception = null;
            fieldSetFlags()[6] = false;
            return this;
        }
        
        @Override
        public RobotsTXT build() {
            try {
                RobotsTXT record = new RobotsTXT();
                record.hasRobotsTXT = fieldSetFlags()[0] ? this.hasRobotsTXT : (java.lang.Boolean) defaultValue(fields()[0]);
                record.allowedByRobotsTXT = fieldSetFlags()[1] ? this.allowedByRobotsTXT : (java.lang.Boolean) defaultValue(fields()[1]);
                record.sitemapXML = fieldSetFlags()[2] ? this.sitemapXML : (java.lang.Boolean) defaultValue(fields()[2]);
                record.sitemapXMLSPARQL = fieldSetFlags()[3] ? this.sitemapXMLSPARQL : (java.lang.Boolean) defaultValue(fields()[3]);
                record.sitemapXMLSPARQLMatch = fieldSetFlags()[4] ? this.sitemapXMLSPARQLMatch : (java.lang.Boolean) defaultValue(fields()[4]);
                record.sitemapXMLVoiD = fieldSetFlags()[5] ? this.sitemapXMLVoiD : (java.lang.Boolean) defaultValue(fields()[5]);
                record.Exception = fieldSetFlags()[6] ? this.Exception : (java.lang.CharSequence) defaultValue(fields()[6]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
